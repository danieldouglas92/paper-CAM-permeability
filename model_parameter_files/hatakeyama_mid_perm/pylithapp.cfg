[pylithapp.metadata]
description = test
authors = []
keywords = []
version = 2.0.0
pylith_version = [>=4.0, <5.0]

features = [
    Quasi-static problem,
    field split preconditioner,
    Schur complement preconditioner,
    pylith.materials.Elasticity,
    pylith.materials.IsotropicLinearElasticity,
    pylith.meshio.MeshIOPetsc,
    pylith.problems.TimeDependent,
    pylith.problems.SolnDispPresTracStrainVelPdotTdot,
    pylith.problems.InitialConditionDomain,
    pylith.bc.DirichletTimeDependent,
    pylith.meshio.DataWriterHDF5,
    spatialdata.spatialdb.SimpleGridDB,
    spatialdata.spatialdb.UniformDB
    ]

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
pylithapp = 1
timedependent = 1
solution = 1
meshiopetsc = 1
petscoptions = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
# Change the default mesh reader to the PETSc reader for Gmsh files.
reader = pylith.meshio.MeshIOPetsc
reader.filename = ../100m_mesh_15km.msh
reader.coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
# Set the default quadrature order for all subfields.
#
# IMPORTANT: The quadrature order *must* the same for all solution and
# auxiliary subfields. PyLith will verify that this requirement is met.
# This requirement may be relaxed in the future.
defaults.quadrature_order = 2

# solution = pylith.problems.SolnDispPresTracStrainVelPdotTdotLagrange
solution = pylith.problems.SolnDispPresTracStrainVelPdotTdot

[pylithapp.problem.solution.subfields]
displacement.basis_order = 2
pressure.basis_order = 1
trace_strain.basis_order = 1

velocity.basis_order = 2
pressure_t.basis_order = 1
trace_strain_t.basis_order = 1

[pylithapp.problem]
# Scales for nondimensionalization
normalizer = spatialdata.units.NondimElasticQuasistatic
normalizer.length_scale = 100.0*m
normalizer.relaxation_time = 1*year
normalizer.shear_modulus = 30.0*GPa

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem]
# We have two different poroelastic materials each with a linear bulk rheology.
materials = [subducting]
materials.subducting = pylith.materials.Poroelasticity

[pylithapp.problem.materials]
subducting.bulk_rheology = pylith.materials.IsotropicLinearPoroelasticity

[pylithapp.problem.materials.subducting]

description = subducting
label_value = 1
use_state_variables = True
use_body_force      = True
db_auxiliary_field = spatialdata.spatialdb.SimpleGridDB 
db_auxiliary_field.description = Test 
db_auxiliary_field.query_type = linear

observers.observer.data_fields = [displacement, pressure, cauchy_stress, velocity, porosity, isotropic_permeability, water_content, solid_density]

auxiliary_subfields.porosity.basis_order = 2
auxiliary_subfields.gravitational_acceleration.basis_order = 0
auxiliary_subfields.body_force.basis_order = 0
auxiliary_subfields.solid_density.basis_order = 2
auxiliary_subfields.fluid_density.basis_order = 0
auxiliary_subfields.fluid_viscosity.basis_order = 0

[pylithapp.problem.materials.subducting.bulk_rheology]
auxiliary_subfields.isotropic_permeability.basis_order = 2
auxiliary_subfields.drained_bulk_modulus.basis_order = 2
auxiliary_subfields.shear_modulus.basis_order = 2
auxiliary_subfields.biot_coefficient.basis_order = 2
auxiliary_subfields.biot_modulus.basis_order = 2

[pylithapp.problem]
bc = [bndry_west, bndry_top, bndry_top_fluid, bndry_bot, bndry_east]

bc.bndry_west = pylith.bc.DirichletTimeDependent
bc.bndry_top = pylith.bc.DirichletTimeDependent
bc.bndry_top_fluid = pylith.bc.DirichletTimeDependent
bc.bndry_bot = pylith.bc.DirichletTimeDependent
bc.bndry_east = pylith.bc.DirichletTimeDependent

[pylithapp.problem.bc.bndry_west]
constrained_dof = [0, 1]
label = bndry_west
label_value = 11
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC -x

[pylithapp.problem.bc.bndry_top]
constrained_dof = [0, 1]
label = bndry_top
label_value = 10
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC +y

[pylithapp.problem.bc.bndry_top_fluid]
constrained_dof = [0]
label = bndry_top_fluid
label_value = 15
field = pressure
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC +y

[pylithapp.problem.bc.bndry_bot]
constrained_dof = [0, 1]
label = bndry_bot
label_value = 14
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC +y

[pylithapp.problem.bc.bndry_east]
constrained_dof = [0, 1]
label = bndry_east
label_value = 12
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC -x


# [pylithapp.problem]

# interfaces = [outer_rise_fault_0]

# [pylithapp.problem.interfaces.outer_rise_fault_0]
# label = outer_rise_fault_0
# label_value = 201
# edge = edge_outer_rise_fault_0
# edge_value = 301
# observers.observer.data_fields = [slip] 

# [pylithapp.problem.interfaces.outer_rise_fault_0.eq_ruptures.rupture]
# db_auxiliary_field = spatialdata.spatialdb.UniformDB
# db_auxiliary_field.description = Slip parameters for fault
# db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_opening]
# db_auxiliary_field.data = [0.0*s, 0.0*m, 0.0*m]
# End of file
